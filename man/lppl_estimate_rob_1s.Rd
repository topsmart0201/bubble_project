% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LPPL_3step.R
\name{lppl_estimate_rob_1s}
\alias{lppl_estimate_rob_1s}
\title{1st step LPPL estimation procedure  by Geraskin and Fantazzini (2013) and Fantazzini(2016)}
\usage{
lppl_estimate_rob_1s(x, par_start = c(bet = 0.5, ome = 6, A =
  log(x[NROW(x)]), B = 0, C1 = 0, C2 = 0), max.win.tc = 0.1)
}
\arguments{
\item{x}{is a T x 1 data vector}

\item{par_start}{is a 6 x 1 vector of starting values for the parameters to be estimated}

\item{max.win.tc}{is a scalar setting the max window size (in percentage terms) used to fix the critical time tc in this estimation step}
}
\value{
par_est1 is a 6 x 1 vector of estimated parameters
}
\description{
This function performs the 1st step of the LPPL estimation procedure  by Geraskin and Fantazzini (2013) and Fantazzini (2016)
}
\details{
This function performs the 1st step of the LPPL estimation procedure
by Geraskin and Fantazzini (2013) and Fantazzini (2016) using the LPPL formula
by Filimonov and Sornette (2013):
The critical time tc is fixed at tc = t2 + 0.1 x (t2-t1), where t2 and t1 are
the last and the first observation of the
estimation sample, respectively. The remaining LPPL parameters [A, B, C1, C2, beta, omega]
are estimated by using a quasi-Newton method algorithm.
The starting values for the parameter vector is given by:

par_start[1] = beta

par_start[2] = omega

par_start[3] = A

par_start[4] = B

par_start[5] = C1

par_start[6] = C2
}
